# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '.vscode/**'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'

jobs:
  esp32:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: 'recursive'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            build
            managed_components
            sdkconfig
          key: ${{ runner.os }}-esp32-build
      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-espidf
      - name: ESP32 Build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.3.2
          target: esp32
          path: '.'
          extra_docker_args: -v ~/.ccache:/root/.ccache -e CCACHE_DIR=/root/.ccache
          command: idf.py --ccache build && idf.py merge-bin
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: esp32-firmware
          path: build/HomeKey-ESP32.bin
      - name: Archive merged binary
        uses: actions/upload-artifact@v4
        with:
          name: esp32-firmware-merged
          path: build/merged-binary.bin
  esp32c3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: 'recursive'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            build
            managed_components
            sdkconfig
          key: ${{ runner.os }}-esp32c3-build
      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-espidf
      - name: ESP32C6 Build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.3.2
          target: esp32c6
          path: '.'
          extra_docker_args: -v ~/.ccache:/root/.ccache -e CCACHE_DIR=/root/.ccache
          command: idf.py --ccache build && idf.py merge-bin
      - name: ESP32C3 Build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.3.2
          target: esp32c3
          path: '.'
          extra_docker_args: -v ~/.ccache:/root/.ccache -e CCACHE_DIR=/root/.ccache
          command: idf.py --ccache build && idf.py merge-bin
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: esp32c3-firmware
          path: build/HomeKey-ESP32.bin
      - name: Archive merged binary
        uses: actions/upload-artifact@v4
        with:
          name: esp32c3-firmware-merged
          path: build/merged-binary.bin
  esp32s3:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: 'recursive'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            build
            managed_components
            sdkconfig
          key: ${{ runner.os }}-esp32s3-build
      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-espidf
      - name: ESP32S3 Build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.3.2
          target: esp32s3
          path: '.'
          extra_docker_args: -v ~/.ccache:/root/.ccache -e CCACHE_DIR=/root/.ccache
          command: idf.py --ccache build && idf.py merge-bin
      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
          name: esp32s3-firmware
          path: build/HomeKey-ESP32.bin
      - name: Archive merged binary
        uses: actions/upload-artifact@v4
        with:
          name: esp32s3-firmware-merged
          path: build/merged-binary.bin
  littlefs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'data'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install LittleFS Tool
        run: pip install littlefs-python
      - name: Create LittleFS Image
        run: littlefs-python create $(pwd)/data littlefs.bin -v --fs-size=0x20000 --name-max=64 --block-size=4096
      - name: Archive LittleFS image
        uses: actions/upload-artifact@v4
        with:
          name: littlefs-binary
          path: littlefs.bin
